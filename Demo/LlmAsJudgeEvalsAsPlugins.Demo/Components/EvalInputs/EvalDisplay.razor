@using HillPhelmuth.SemanticKernel.LlmAsJudgeEvals
<RadzenDataGrid @ref=_grid Data="EvalResultDisplays" TItem="EvalResultDisplay" AllowSorting=true AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Density="Density.Compact" AllowPaging=true PageSize="12">
	<Template Context="display">
		<RadzenTabs>
			<Tabs>
				<RadzenTabsItem Text="Response">
					<RadzenText TextStyle="TextStyle.Overline">@display.ResultScore.Output</RadzenText>
					<RadzenCard Style="word-wrap: break-word;
                           overflow-wrap: break-word;
                           white-space: normal;
                           overflow: hidden;
                           width: 100%;">
						@((MarkupString)AsHtml(display.Answer))
					</RadzenCard>
				</RadzenTabsItem>
                <RadzenTabsItem Visible="@(display.ResultScore.LogProbResults != null)" Text="Result Probabilities">
                    <RadzenCard>
                        <RadzenDataGrid TItem="TokenString" Data="@display.ResultScore.LogProbResults" AllowSorting="true" Density="Density.Compact">
                            <Columns>
                                <RadzenDataGridColumn TItem="TokenString" Property="StringValue" Title="Value" Width="50%"></RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="TokenString" Title="Probability" Width="50%">
                                    <Template Context="tokenString">
                                        <RadzenText TextStyle="TextStyle.Body2" Text="@tokenString.NormalizedLogProbability.ToString("P3")"></RadzenText>
                                    </Template>
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>
                    </RadzenCard>
                </RadzenTabsItem>
                <RadzenTabsItem Visible="@(!string.IsNullOrEmpty(display.ResultScore.Reasoning))" Text="Explanation">
					<RadzenCard Style="word-wrap: break-word;
                           overflow-wrap: break-word;
                           white-space: normal;
                           overflow: hidden;
                           width: 100%;"> @((MarkupString)AsHtml(display.ResultScore.Reasoning))</RadzenCard>
                </RadzenTabsItem>
				<RadzenTabsItem Visible="@(!string.IsNullOrEmpty(display.Context))" Text="Retreived Content">
					<RadzenCard Style="word-wrap: break-word;
					                   overflow-wrap: break-word;
					                   white-space: normal;
					                   overflow: hidden;
					                   width: 100%;">
						@((MarkupString)AsHtml(display.Context))
					</RadzenCard>
				</RadzenTabsItem>
			</Tabs>
		</RadzenTabs>
	</Template>
	<Columns>
		<RadzenDataGridColumn TItem="EvalResultDisplay" Title="Question" Property="Question" Width="60%"></RadzenDataGridColumn>
		<RadzenDataGridColumn TItem="EvalResultDisplay" Title="Eval" Property="ResultScore.EvalName" Width="20%"></RadzenDataGridColumn>
		<RadzenDataGridColumn TItem="EvalResultDisplay" Title="Score" Property="ResultScore.Score" Width="10%"></RadzenDataGridColumn>
		<RadzenDataGridColumn TItem="EvalResultDisplay" Title="Weighted" Width="10%">
			<Template Context="result">
				<RadzenText Text="@result.ResultScore.ProbScore.ToString("N3")"></RadzenText>
			</Template>
		</RadzenDataGridColumn>
	</Columns>
</RadzenDataGrid>
@if (LogProbAggregatedResults.Any())
{
	<RadzenRow>
		<RadzenColumn Size="6">
			<RadzenCard>
				<RadzenText Text="Aggregated Weighted LogProb Results" TextStyle="TextStyle.Subtitle1" TextAlign="TextAlign.Center"></RadzenText>
				@foreach (var agg in LogProbAggregatedResults)
				{
					<RadzenCard>
						<RadzenText TextStyle="TextStyle.Body1">@agg.Key -</RadzenText>
						<RadzenText TextStyle="TextStyle.Caption">@agg.Value.ToString("N3") @(agg.Key.Contains("PerceivedIntelligence") || agg.Key == "GptGroundedness2" ? " / 10" : " / 5")</RadzenText>
					</RadzenCard>
				}
			</RadzenCard>
		</RadzenColumn>
		<RadzenColumn Size="6">
			<RadzenCard>
				<RadzenText Text="Aggregated Response Only Results" TextStyle="TextStyle.Subtitle1" TextAlign="TextAlign.Center"></RadzenText>
				@foreach (var agg in StandardAggregatedResults)
				{
					<RadzenCard>
						<RadzenText TextStyle="TextStyle.Body1">@agg.Key -</RadzenText>
						<RadzenText TextStyle="TextStyle.Caption">@agg.Value @(agg.Key.Contains("PerceivedIntelligence") || agg.Key == "GptGroundedness2" ? " / 10" : " / 5")</RadzenText>
					</RadzenCard>
				}
			</RadzenCard>
		</RadzenColumn>
	</RadzenRow>
}