name: Publish NuGet Package

on:
  push:
    tags:
      - 'release*'

permissions:
  contents: read
  packages: write

jobs:
  precheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check tag commit is on main
        id: check
        run: |
          git fetch origin main
          if git merge-base --is-ancestor "$GITHUB_SHA" "origin/main"; then
            echo "on_main=true" >> $GITHUB_OUTPUT
          else
            echo "on_main=false" >> $GITHUB_OUTPUT
          fi
    outputs:
      on_main: ${{ steps.check.outputs.on_main }}

  publish:
    runs-on: ubuntu-latest
    needs: precheck
    if: needs.precheck.outputs.on_main == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x' 

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the project
      run: dotnet build --configuration Release

    - name: Test the project
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Pack the project
      run: dotnet pack --configuration Release --no-build --output ./output

    - name: Publish to NuGet.org
      run: dotnet nuget push ./output/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Configure GitHub Packages source
      run: dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --name github --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

    - name: Publish to GitHub Packages
      run: dotnet nuget push ./output/*.nupkg --source github --skip-duplicate
